<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ðŸ•· crawl.blog - tools</title><link href="http://crawl.blog/" rel="alternate"></link><link href="%F0%9F%95%B7%20crawl.blog/feeds/tools.atom.xml" rel="self"></link><id>http://crawl.blog/</id><updated>2019-03-28T00:00:00+01:00</updated><entry><title>parselcli - css and xpath selectors in your terminal!</title><link href="http://crawl.blog/parsecli.html" rel="alternate"></link><published>2019-03-28T00:00:00+01:00</published><updated>2019-03-28T00:00:00+01:00</updated><author><name>granitosaurus</name></author><id>tag:crawl.blog,2019-03-28:/parsecli.html</id><summary type="html">&lt;p&gt;I'd like to introduce &lt;code&gt;parselcli&lt;/code&gt; an command line application for evaluating css and xpath selectors in your terminal.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Building html parser can be quite time consuming and often complicated. &lt;a href="https://github.com/scrapy/parsel"&gt;parsel&lt;/a&gt; is a python library for parsing html with css or xpath selectors, while &lt;a href="https://github.com/Granitosaurus/parsel-cli"&gt;parselcli&lt;/a&gt; is an interactive shell wrapper around it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: I wrote parselcli&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In short &lt;code&gt;parselcli&lt;/code&gt; allows you to do this:&lt;/p&gt;
&lt;script async="" id="asciicast-234118" src="https://asciinema.org/a/234118.js"&gt;&lt;/script&gt;
&lt;p&gt;At the moment version 0.31 &lt;code&gt;parselcli&lt;/code&gt; has these features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;css and xpath selectors&lt;/li&gt;
&lt;li&gt;Auto complete for classes, ids and tags with history (for ptpython shell)&lt;/li&gt;
&lt;li&gt;Evaluating against cached, live urls or local files (see --cached and --file flags)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inline executions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ parsel "http://httpbin.org/html" -c h1
['&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Herman Melville - Moby-Dick&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;']
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supports output processors:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ parsel &lt;span class="s2"&gt;"http://httpbin.org/html"&lt;/span&gt; -c h1::text -p join,len
&lt;span class="m"&gt;27&lt;/span&gt;
&lt;span class="c1"&gt;# the h1 text is 27 characters long!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supports commands for fast workflow and debuging:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ parsel &lt;span class="s2"&gt;"http://httpbin.org/html"&lt;/span&gt;
&amp;gt; -help
available commands &lt;span class="o"&gt;(&lt;/span&gt;use -command&lt;span class="o"&gt;)&lt;/span&gt;:
  help: show &lt;span class="nb"&gt;help&lt;/span&gt;
  debug: show debug info
  embed: start interactive python shell
  open: open current url in browser tab
  view: open current html in browser tab
  fetch: download from new url
  css: switch to css selectors
  xpath: switch to xpath selectors
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fully configurable via &lt;code&gt;~/.config/parsel.toml&lt;/code&gt; file (depending on your &lt;code&gt;$XDG_CONFIG&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Preload embed shell for full python&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ parsel &lt;span class="s2"&gt;"http://httpbin.org/html"&lt;/span&gt; --embed
&amp;gt;&amp;gt;&amp;gt; dir&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'request'&lt;/span&gt;, &lt;span class="s1"&gt;'response'&lt;/span&gt;, &lt;span class="s1"&gt;'sel'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; response.cookies
&amp;lt;RequestsCookieJar&lt;span class="o"&gt;[]&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="my workflow"&gt;My Workflow&lt;/h2&gt;
&lt;p&gt;I build &lt;code&gt;parselcli&lt;/code&gt; to have faster and more convenient workflow for building html parsers.&lt;/p&gt;
&lt;p&gt;&lt;video autoplay="" height="240" loop="" muted="" title="" width="480"&gt;&lt;source src="/video/spongebob_work.mp4" type="video/mp4"/&gt;&lt;/video&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/p&gt;
&lt;p&gt;First thing I do is find a product/item that has the higher coverage. For example if I'm crawling a clothing shop I look for a product that has all of the fields like variants, colours, sizes and multiple prices. Shoes in often meet this criteria. &lt;br/&gt;
This will be my &lt;em&gt;genesis&lt;/em&gt; html that I will use to build my parser.&lt;/p&gt;
&lt;p&gt;I pass this url to my &lt;code&gt;parsel&lt;/code&gt; and cache it in case I need to run it again in the future. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ parsel &lt;span class="s2"&gt;"http://httpbin.org/html"&lt;/span&gt; --cache
using cached version
&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Afterwards if the website functions without javascript I use &lt;code&gt;-view&lt;/code&gt; command to open up source in my browser or &lt;code&gt;-open&lt;/code&gt; command to open up live url in my browser.  &lt;/p&gt;
&lt;p&gt;In my browsers (chromium or qutebrowser) I open up inspector and click around html code and identify my css selectors if they are possible, xpath if something more complicated is required.&lt;br/&gt;
I pop my ideas to parsel shell and see how it looks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;gt; h1::text&lt;/span&gt;
&lt;span class="err"&gt;['Herman Melville - Moby-Dick']&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I'm satisfied I save the selectors in my crawler code and move on.&lt;br/&gt;
Quite simple really!&lt;/p&gt;
&lt;h2 id="contribution is welcome!"&gt;Contribution is Welcome!&lt;/h2&gt;
&lt;p&gt;Parselcli is still in rather early development but I've been using it &lt;em&gt;in production&lt;/em&gt; for a while now. Nevertheless any contributions are welcome!&lt;/p&gt;
&lt;p&gt;&lt;a href="/img/parselcli_releases.png"&gt;&lt;img src="/img/parselcli_releases.png" title=""/&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;/figcaption&gt;&lt;/p&gt;
&lt;p&gt;https://github.com/Granitosaurus/parsel-cli&lt;/p&gt;</content><category term="tools"></category><category term="python"></category><category term="parsel"></category><category term="parsing"></category></entry></feed>